// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PointOfSale.Data.Entities;

namespace PointOfSale.Data.Migrations
{
    [DbContext(typeof(PointOfSaleDbContext))]
    partial class PointOfSaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchasedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isCancelled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillType = 0,
                            PurchasedOn = new DateTime(2021, 1, 16, 16, 58, 24, 985, DateTimeKind.Local).AddTicks(8354),
                            TotalPrice = 25m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 2,
                            BillType = 0,
                            PurchasedOn = new DateTime(2021, 1, 7, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 1500m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 3,
                            BillType = 0,
                            PurchasedOn = new DateTime(2021, 1, 3, 9, 35, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 5m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 4,
                            BillType = 2,
                            PurchasedOn = new DateTime(2021, 1, 9, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 1000m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 5,
                            BillType = 2,
                            PurchasedOn = new DateTime(2020, 12, 28, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 180m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 6,
                            BillType = 2,
                            PurchasedOn = new DateTime(2021, 1, 16, 16, 58, 24, 988, DateTimeKind.Local).AddTicks(8827),
                            TotalPrice = 710m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 7,
                            BillType = 1,
                            PurchasedOn = new DateTime(2021, 1, 2, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 200m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 8,
                            BillType = 1,
                            PurchasedOn = new DateTime(2021, 1, 5, 13, 25, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 67.5m,
                            isCancelled = false
                        },
                        new
                        {
                            Id = 9,
                            BillType = 1,
                            PurchasedOn = new DateTime(2021, 1, 18, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 62.5m,
                            isCancelled = false
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NameOfCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameOfCategory = "food"
                        },
                        new
                        {
                            Id = 2,
                            NameOfCategory = "hygiene"
                        },
                        new
                        {
                            Id = 3,
                            NameOfCategory = "electronics"
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerID = "62783190283",
                            FirstName = "Ante",
                            LastName = "Antić"
                        },
                        new
                        {
                            Id = 2,
                            CustomerID = "092836784921",
                            FirstName = "Josip",
                            LastName = "Josipić"
                        },
                        new
                        {
                            Id = 3,
                            CustomerID = "98368109372",
                            FirstName = "Marko",
                            LastName = "Markić"
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WeeklyWorkingHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeID = "28903610827",
                            FirstName = "Mate",
                            LastName = "Matić",
                            WeeklyWorkingHours = 50m
                        },
                        new
                        {
                            Id = 2,
                            EmployeeID = "10927489362",
                            FirstName = "Ivan",
                            LastName = "Ivanić",
                            WeeklyWorkingHours = 25m
                        },
                        new
                        {
                            Id = 3,
                            EmployeeID = "90367890251",
                            FirstName = "Duje",
                            LastName = "Dujić",
                            WeeklyWorkingHours = 45m
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferType")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "cake",
                            OfferType = 0,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 2,
                            Name = "TV",
                            OfferType = 0,
                            Quantity = 12
                        },
                        new
                        {
                            Id = 3,
                            Name = "laptop",
                            OfferType = 0,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 4,
                            Name = "shampoo",
                            OfferType = 0,
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "cake",
                            OfferId = 1,
                            Price = 25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "TV",
                            OfferId = 2,
                            Price = 25m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "shampoo",
                            OfferId = 3,
                            Price = 25m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfferType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OfferType = 0
                        },
                        new
                        {
                            Id = 2,
                            OfferType = 0
                        },
                        new
                        {
                            Id = 3,
                            OfferType = 0
                        },
                        new
                        {
                            Id = 4,
                            OfferType = 1
                        },
                        new
                        {
                            Id = 5,
                            OfferType = 1
                        },
                        new
                        {
                            Id = 6,
                            OfferType = 1
                        },
                        new
                        {
                            Id = 7,
                            OfferType = 2
                        },
                        new
                        {
                            Id = 8,
                            OfferType = 2
                        },
                        new
                        {
                            Id = 9,
                            OfferType = 2
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.OfferCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            OfferId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            OfferId = 4
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            OfferId = 7
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            OfferId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            OfferId = 5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            OfferId = 8
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            OfferId = 3
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            OfferId = 6
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            OfferId = 9
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndOfRent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartOfRent")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Rents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndOfRent = new DateTime(2021, 1, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rent professional kitchen",
                            OfferId = 7,
                            PricePerHour = 80m,
                            StartOfRent = new DateTime(2021, 1, 3, 11, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndOfRent = new DateTime(2021, 1, 28, 23, 45, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rent washing machine",
                            OfferId = 8,
                            PricePerHour = 30m,
                            StartOfRent = new DateTime(2021, 1, 28, 21, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndOfRent = new DateTime(2021, 2, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rent computer",
                            OfferId = 9,
                            PricePerHour = 25m,
                            StartOfRent = new DateTime(2021, 2, 10, 13, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ScheduledOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dinner by professional chef",
                            OfferId = 4,
                            PricePerHour = 500m,
                            ScheduledOn = new DateTime(2021, 1, 10, 20, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cleaning toilets",
                            OfferId = 5,
                            PricePerHour = 120m,
                            ScheduledOn = new DateTime(2021, 1, 1, 13, 20, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fixing laptop",
                            OfferId = 6,
                            PricePerHour = 355m,
                            ScheduledOn = new DateTime(2021, 1, 30, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ServiceBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OfferId");

                    b.ToTable("ServiceBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 4,
                            EmployeeId = 1,
                            OfferId = 4
                        },
                        new
                        {
                            Id = 2,
                            BillId = 5,
                            EmployeeId = 2,
                            OfferId = 5
                        },
                        new
                        {
                            Id = 3,
                            BillId = 6,
                            EmployeeId = 1,
                            OfferId = 6
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfferId");

                    b.ToTable("SubscriptionBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 7,
                            CustomerId = 1,
                            OfferId = 7
                        },
                        new
                        {
                            Id = 2,
                            BillId = 8,
                            CustomerId = 2,
                            OfferId = 8
                        },
                        new
                        {
                            Id = 3,
                            BillId = 9,
                            CustomerId = 1,
                            OfferId = 9
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.TraditionalBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("OfferId");

                    b.ToTable("TraditionalBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 1,
                            OfferId = 1
                        },
                        new
                        {
                            Id = 2,
                            BillId = 2,
                            OfferId = 2
                        },
                        new
                        {
                            Id = 3,
                            BillId = 3,
                            OfferId = 3
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Item", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Items")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.OfferCategory", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Category", "Category")
                        .WithMany("OfferCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("OfferCategories")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Rent", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Rents")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Service", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Services")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ServiceBill", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Bill", "Bill")
                        .WithMany("ServiceBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Employee", "Employee")
                        .WithMany("ServiceBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("ServiceBills")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Employee");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Bill", "Bill")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Customer", "Customer")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Customer");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.TraditionalBill", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Bill", "Bill")
                        .WithMany("TraditionalBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("TraditionalBills")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Bill", b =>
                {
                    b.Navigation("ServiceBills");

                    b.Navigation("SubscriptionBills");

                    b.Navigation("TraditionalBills");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Category", b =>
                {
                    b.Navigation("OfferCategories");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Customer", b =>
                {
                    b.Navigation("SubscriptionBills");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Employee", b =>
                {
                    b.Navigation("ServiceBills");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("OfferCategories");

                    b.Navigation("Rents");

                    b.Navigation("ServiceBills");

                    b.Navigation("Services");

                    b.Navigation("SubscriptionBills");

                    b.Navigation("TraditionalBills");
                });
#pragma warning restore 612, 618
        }
    }
}
